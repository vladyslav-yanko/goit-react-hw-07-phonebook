{"version":3,"sources":["Components/Filter/Filter.module.css","redux/contact/contacts-actions.js","redux/contact/contacts-selectors.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","redux/contact/contacts-reducers.js","redux/store.js","index.js","Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","changeFilter","contactsActions","deleteContact","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","text","includes","getFiteredContacts","ContactForm","useState","setName","setNumber","contactNameId","contactNumberId","dispatch","useDispatch","useSelector","handleChange","e","currentTarget","value","reset","className","s","form","onSubmit","preventDefault","find","contact","alert","label","htmlFor","input","type","onChange","btn","ContactList","map","item","span","onClick","onDeleteContact","Filter","actions","target","App","createReducer","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,wB,oLCEpBC,EAAaC,YAAa,gBAAgB,SAACC,EAAMC,GAAP,MAAmB,CACjEC,QAAS,CACPC,GAAIC,IAAQC,WACZL,OACAC,cAIEK,EAAeP,YAAa,yBAGnBQ,EADS,CAAET,aAAYU,cADhBT,YAAa,mBACkBO,gBCbxCG,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OACtCC,EAAY,SAAAH,GAAK,OAAIA,EAAMC,SAASG,QAEpCC,EAAqB,SAAAL,GAChC,IAAMC,EAAWF,EAAYC,GACvBI,EAASD,EAAUH,GASzB,OAP2B,SAAAC,GACzB,IAAMK,EAAmBF,EAAOG,cAChC,OAAON,EAASG,QAAO,SAAAI,GAAI,OACzBA,EAAKlB,KAAKiB,cAAcE,SAASH,MAI9BI,CAAmBT,I,OCPb,SAASU,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOtB,EAAP,KAAauB,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOrB,EAAP,KAAeuB,EAAf,KAEMC,EAAgBrB,IAAQC,WACxBqB,EAAkBtB,IAAQC,WAE1BsB,EAAWC,cACXjB,EAAWkB,YAAYpB,GAEvBqB,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBhC,EAAR,EAAQA,KAAMiC,EAAd,EAAcA,MACd,OAAQjC,GACN,IAAK,OACHuB,EAAQU,GACR,MACF,IAAK,SACHT,EAAUS,GACV,MACF,QACE,SA0BAC,EAAQ,WACZX,EAAQ,IACRC,EAAU,KAGZ,OACE,uBAAMW,UAAWC,IAAEC,KAAMC,SA5BN,SAAAP,GAEnB,GADAA,EAAEQ,iBACW,KAATvC,EAKJ,GAAe,KAAXC,EAAJ,CAKA,GAAIU,EAAS6B,MAAK,SAAAC,GAAO,OAAIA,EAAQzC,OAASA,KAG5C,OAFA0C,MAAM,GAAD,OAAI1C,EAAJ,kCACLkC,IAIFP,EAASpB,EAAgBT,WAAWE,EAAMC,IAC1CiC,SAXEQ,MAAM,oPALNA,MAAM,mLAyBR,UACE,wBAAOP,UAAWC,IAAEO,MAAOC,QAASnB,EAApC,iBAEE,uBACEU,UAAWC,IAAES,MACbC,KAAK,OACL9C,KAAK,OACLiC,MAAOjC,EACP+C,SAAUjB,EACV3B,GAAIsB,OAGR,wBAAOU,UAAWC,IAAEO,MAAOC,QAASlB,EAApC,mBAEE,uBACES,UAAWC,IAAES,MACbC,KAAK,OACL9C,KAAK,SACLiC,MAAOhC,EACP8C,SAAUjB,EACV3B,GAAIuB,OAIR,wBAAQS,UAAWC,IAAEY,IAAKF,KAAK,SAA/B,4B,oBC3ES,SAASG,IACtB,IAAMtC,EAAWkB,YAAYd,GACvBY,EAAWC,cAEjB,OACE,6BACGjB,EAASuC,KAAI,gBAAG/C,EAAH,EAAGA,GAAIH,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,qBAAIkC,UAAWC,IAAEe,KAAjB,UACE,uBAAMhB,UAAWC,IAAEgB,KAAnB,UAA0BpD,EAA1B,QACA,sBAAMmC,UAAWC,IAAEgB,KAAnB,SAA0BnD,IAC1B,wBAAQoD,QAAS,kBAPD,SAAAlD,GAAE,OAAIwB,EAASpB,EAAgBC,cAAcL,IAOtCmD,CAAgBnD,IAAKgC,UAAWC,IAAEY,IAAzD,2BAH0B7C,Q,qBCTrB,SAASoD,IACtB,IAAMtB,EAAQJ,YAAYhB,GACpBc,EAAWC,cAEjB,OACE,wBAAOO,UAAWC,IAAEO,MAApB,kCAEE,uBACEG,KAAK,OACLb,MAAOA,EACPc,SAAU,SAAAhB,GAAC,OAAIJ,EAAS6B,EAAQlD,aAAayB,EAAE0B,OAAOxB,c,MCV/C,SAASyB,IACtB,OACE,sBAAKvB,UAAU,QAAf,UACE,2CACA,cAACd,EAAD,IACA,0CACA,cAACkC,EAAD,IACA,cAACN,EAAD,O,8ECTArC,EAAQ+C,YAAc,IAAD,mBACxBH,EAAQ1D,YAAa,SAACY,EAAD,OAAUR,EAAV,EAAUA,QAAV,4BAA4BQ,GAA5B,CAAmCR,OADhC,cAExBsD,EAAQhD,eAAgB,SAACE,EAAD,OAAUR,EAAV,EAAUA,QAAV,OACvBQ,EAAMI,QAAO,qBAAGX,KAAgBD,QAHT,IAMrBY,EAAS6C,YAAc,GAAD,eACzBH,EAAQlD,cAAe,SAACsD,EAAD,YAAM1D,YAGjB2D,cAAgB,CAC7BjD,QACAE,WCDIgD,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAGIC,EAAyB,CAC7BC,IAAK,WACLC,YACAC,UAAW,CAAC,WAGDC,EAAQC,YAAe,CAClCC,QAAS,CACPpE,SAAUqE,YAAeP,EAAwBQ,IAEnDnB,aACAoB,UAAUC,IAGCC,EAAYC,YAAaR,GC9BtCS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUX,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAaY,QAAS,KAAML,UAAWA,EAAvC,SACE,cAAC,EAAD,UAINM,SAASC,eAAe,U,kBCf1B/F,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,IAAM,2B,kBCA/HD,EAAOC,QAAU,CAAC,IAAM,yBAAyB,KAAO,0BAA0B,KAAO,6B","file":"static/js/main.75b80422.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__i6pxp\"};","import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\nconst addContact = createAction('contacts/add', (name, number) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\n\nconst changeFilter = createAction('contacts/changeFilter');\nconst deleteContact = createAction('contacts/delete');\nconst contactsActions = { addContact, deleteContact, changeFilter };\nexport default contactsActions;\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n\n  const getFiteredContacts = contacts => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(text =>\n      text.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  return getFiteredContacts(contacts);\n};\n","import { useState } from 'react';\nimport shortid from 'shortid';\nimport s from './ContactForm.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport contactsActions from '../../redux/contact/contacts-actions';\nimport { getContacts } from '../../redux/contact/contacts-selectors';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contactNameId = shortid.generate();\n  const contactNumberId = shortid.generate();\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name === '') {\n      alert(`Введите, пожалуйста, имя контакта.`);\n      return;\n    }\n\n    if (number === '') {\n      alert(`Введите, пожалуйста, номер телефона контакта.`);\n      return;\n    }\n\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n      reset();\n      return;\n    }\n\n    dispatch(contactsActions.addContact(name, number));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor={contactNameId}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          id={contactNameId}\n        />\n      </label>\n      <label className={s.label} htmlFor={contactNumberId}>\n        Number\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          id={contactNumberId}\n        />\n      </label>\n\n      <button className={s.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import PropTypes from 'prop-types';\n\nimport s from './ContactList.module.css';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport contactsActions from '../../redux/contact/contacts-actions';\nimport { getVisibleContacts } from '../../redux/contact/contacts-selectors';\n\nexport default function ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  const onDeleteContact = id => dispatch(contactsActions.deleteContact(id));\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.item} key={id}>\n          <span className={s.span}>{name}: </span>\n          <span className={s.span}>{number}</span>\n          <button onClick={() => onDeleteContact(id)} className={s.btn}>\n            DELETE!!!!!\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.number.isRequired,\n  }),\n  onDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contact/contacts-selectors';\nimport actions from '../../redux/contact/contacts-actions';\n\nexport default function Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(actions.changeFilter(e.target.value))}\n      ></input>\n    </label>\n  );\n}\n\nFilter.propTypes = {\n\n};\n","import ContactForm from './Components/ContactForm/ContactForm';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\n\nimport './App.css';\n\nexport default function App() {\n  return (\n    <div className=\"block\">\n      <h2>Phonebook</h2>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport actions from './contacts-actions';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport contactsReducer from './contact/contacts-reducers';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst phonebookPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(phonebookPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2S6MX\",\"label\":\"ContactForm_label__1iT4z\",\"input\":\"ContactForm_input__2mvxp\",\"btn\":\"ContactForm_btn__j6yzX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactList_btn__sydo6\",\"item\":\"ContactList_item__2xlQ3\",\"span\":\"ContactList_span__16ytD\"};"],"sourceRoot":""}